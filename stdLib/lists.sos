Module stdLib

/*
  Common judgments for lists
*/

/*Find the first item associated with the key*/
Fixed Judgment lookup : [(|Key, Item|)] Key Item

/*Holds if no items are associated with the key*/
Fixed Judgment no_lookup : [(|Key, Item|)] Key

/*Holds if the item is in the list*/
Fixed Judgment member : Item [Item]

/*Splits the list into the item plus the rest of the list around it:
  select A Rest L*/
Fixed Judgment select : Item [Item] [Item]



/*
  Rules
*/


===================================== [Lkp-Here]
lookup (|Key, Value|)::Rest Key Value


K != Key
lookup Rest Key Value
=============================== [Lkp-Later]
lookup (|K, V|)::Rest Key Value




================ [NLkp-Nil]
no_lookup [] Key


K != Key
no_lookup Rest Key
============================ [NLkp-Cons]
no_lookup (|K, V|)::Rest Key




====================== [Mem-Here]
member Item::Rest Item


member Rest Item
=================== [Mem-Later]
member I::Rest Item




=========================== [Slct-First]
select Item Rest Item::Rest


select Item L1 L2
======================= [Slct-Later]
select Item I::L1 I::L2
