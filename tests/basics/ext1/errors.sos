Module basics:ext1

/********************************************************************
 *                              SYNTAX                              *
 ********************************************************************/
/*New constructor but no translation*/
Error Expected "Missing rule for translating" {
  term ::= ... | noTranslationConstructor
}


/*Redefine translation relation*/
Error Expected "unknown" {
  Translation ctx :
}



/********************************************************************
 *                              RULES                               *
 ********************************************************************/
/*Define translation of imported constructor*/
Error Expected "translation for a constructor from another module" {
  -------------------------- [Trans-BaseTy]
  |{type}- baseTy ~~> baseTy
}

/*Translation of a variable*/
Error Expected "translation for an unspecified constructor" {
  ----------------- [Trans-VariableConstructor]
  |{term}- T ~~> T2
}


/*Translation rule with non-variable PC*/
Error Expected "in translation rule must be variable" {
  Judgment transRuleSolidPC : type*

  ----------------------- [TransRuleSolidPC]*
  transRuleSolidPC baseTy
}

/*Translation rule for translation judgment*/
Error Expected "translation for an unspecified constructor" {
  Error Expected "extensible relation judgment as its conclusion" {
    Error Expected "translation rule for translation judgment" {
      ----------------- [Trans-Trans]*
      |{term}- T ~~> T2
    }
  }
}

/*Translation rules:  to few or too many*/
Error Expected "Must define translation rule" {
  Judgment noTransRule : type* string
}
Error Expected "Can only define one translation rule" {
  Judgment twoTransRule : type* string

  ------------------ [TwoTransRule-1]*
  twoTransRule T "1"

  ------------------ [TwoTransRule-2]*
  twoTransRule T "2"
}


/*Define a generic rule for imported relation*/
Error Expected "in rule conclusion must be a constructor" {
  ----------------- [T-Generic]
  typeOf G X baseTy
}

/*Define a rule for an imported constructor as PC*/
Error Expected "must be a constructor introduced in this module" {
  ------------------------ [T-VarX]
  typeOf G var("X") baseTy
}

/*Translation rule for imported relation*/
Error Expected "this module" {
  ------------- [T-Trans]*
  typeOf G A Ty
}

/*Adding to imported fixed rules*/
Error Expected "imported" {
  ============== [L-Bad]
  lkp G X baseTy
}



/********************************************************************
 *                         NAME RESOLUTION                          *
 ********************************************************************/
/*Add same short type name; error when using short name*/
Error Expected "Indeterminate type" {
  shortTy ::= shortTyConstructor2
  Translation shortTy : ctx

  Judgment shortTyJudgment : shortTy*
}

/*Add same short judgment name; error when using short name*/
Error Expected "Indeterminate judgment" {
  Fixed Judgment judgment :

  ======== [Judgment]
  judgment
}

/*Add same short constructor name; error when using short name*/
Error Expected "Indeterminate constructor" {
  doubleConstructorTyExt ::= shortTyConstructor
  Translation doubleConstructorTyExt :

  Judgment doubleConstructorJudgment : doubleConstructorTyExt*

  -------------------------------------------- [DCTE-Rule]
  doubleConstructorJudgment shortTyConstructor
}
