Module sec_SOS:host

ignore /\n\r\t /

name_t     /[a-z][A-Za-z0-9_]*/
int_t      /[0-9]+/
string_t   /"[a-zA-Z0-9.!@#$%^&\*\+\(\)\-]*"/

plus_t   /\+/
gt_t     />/
eq_t     /=/
and_t    /&&/
or_t     /\|\|/
dot_t    /./

true_t    /true/
false_t   /false/

lparen_t   /\(/
rparen_t   /\)/
lcurly_t   /{/
rcurly_t   /}/

semi_t    /;/
if_t      /if/
then_t    /then/
else_t    /else/
while_t   /while/
do_t      /do/
end_t     /end/

intTy_t    /int/
boolTy_t   /bool/
colon_t    /:/


clist_c<c> ::= ~~> noop
             | Here::c_c Rest::clist_c ~~> seq(Here, Rest)

c_c<c> ::= Ty::type_c Name::name_t eq_t E::expr_c semi_t ~~>
              declare(Name, Ty, E)
         | Name::name_t eq_t E::expr_c semi_t ~~> assign(Name, E)
         | Name::name_t dot_t Fields::rec_fields_c eq_t
           E::expr_c semi_t ~~>
              recUpdate(Name, Fields, E)
         | if_t Cond::expr_c then_t Th::clist_c
           else_t El::clist_c end_t ~~>
              ifThenElse(Cond, Th, El)
         | if_t Cond::expr_c then_t Th::clist_c end_t ~~>
              ifThenElse(Cond, Th, noop)
         | while_t Cond::expr_c do_t Body::clist_c end_t ~~>
              while(Cond, Body)

rec_fields_c<recFields> ::=
   | Field::name_t ~~> oneField(Field)
   | Field::name_t dot_t Rest::rec_fields_c ~~>
        addField(Field, Rest)


expr_c<e> ::= L::expr_c or_t R::and_c ~~> or(L, R)
            | E::and_c ~~> E
and_c<e> ::= L::and_c and_t R::comp_c ~~> and(L, R)
           | E::comp_c ~~> E
comp_c<e> ::= L::plus_c gt_t R::plus_c ~~> greater(L, R)
            | L::plus_c eq_t R::plus_c ~~> eq(L, R)
            | E::plus_c ~~> E
plus_c<e> ::= L::plus_c plus_t R::base_c ~~> plus(L, R)
            | E::base_c ~~> E
base_c<e> ::= I::int_t ~~> num($to_int(I))
            | Name::name_t ~~> name(Name)
            | true_t ~~> true
            | false_t ~~> false
            | lcurly_t rcurly_t ~~> recBuild(endRecFieldExprs)
            | lcurly_t Fields::recFieldExprs_c rcurly_t ~~>
                 recBuild(Fields)
            | E::base_c dot_t Field::name_t ~~>
                 recFieldAccess(E, Field)

recFieldExprs_c<recFieldExprs> ::=
   | Field::name_t eq_t E::expr_c ~~>
        addRecFieldExprs(Field, E, endRecFieldExprs)
   | Field::name_t eq_t E::expr_c semi_t Rest::recFieldExprs_c ~~>
        addRecFieldExprs(Field, E, Rest)


type_c<ty> ::= intTy_t ~~> intTy
             | boolTy_t ~~> boolTy
             | lcurly_t rcurly_t ~~> recTy(emptyTy)
             | lcurly_t Fields::recTyFields_c rcurly_t ~~>
                  recTy(Fields)
recTyFields_c<tyctx> ::=
   | Field::name_t colon_t Ty::type_c ~~> addTy(Field, Ty, emptyTy)
   | Field::name_t colon_t Ty::type_c semi_t Rest::recTyFields_c ~~>
        addTy(Field, Ty, Rest)
