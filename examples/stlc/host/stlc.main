Module stlc:host

Function main : <Args : [string]> -> int {
   run(Args)
}


Function run : <Files : [string]> -> int {
   If null(Files)
   Then 0
   Else Let FResult := runFile(head(Files))
        In
          If FResult = 0
          Then run(tail(Files))
          Else FResult
}


Function runFile : <File : string> -> int {
   Let Contents := Read File
   In
   Let PSuccess, Tm, Errors := Parse term_c from Contents
   In
     If PSuccess
     Then
       Let Success, Ty := Derive {typeOf [] Tm Ty} for Tm assigning [Ty]
       In
         If Success
         Then
           Print "Type: " Before
           Print Ty Before
           Print "\n" Before
           0
         Else
           Print "No type" Before
           1
     Else
       Print "Error parsing file " Before
       Print File Before
       Print "\n" Before
       Print Errors Before
       Print "\n" Before
       1
}
